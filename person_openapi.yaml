openapi: 3.0.3
info:
  title: Person API
  version: "1.0.0"
  description: API för hantering av personer (CRUD + extra endpoints).
servers:
  - url: http://localhost:8080/person
paths:
  /checkEnv:
    get:
      summary: Kontrollera miljö
      responses:
        '200':
          description: Miljöinformation
          content:
            application/json:
              schema:
                type: object
                example:
                  environment: "Local"
                  variable: "N/A"
                  value: "N/A"

  /skvToken:
    get:
      summary: Hämta token från Skatteverket
      responses:
        '200':
          description: Token-data
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: "eyJhbGciOiJIUzI1..."
                  token_type: "Bearer"
                  expires_in: 3600

  /hamtaPerson:
    get:
      summary: Hämta en person via ID
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: En person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'

  /skapaPerson:
    post:
      summary: Skapa en ny person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
            example:
              careOf: "c/o Andersson"
              utdelningsadress1: "Storgatan 1"
              postNr: "70364"
              postOrt: "Örebro"
              forNamn: "Anna"
              efterNamn: "Karlsson"
              idBet: "8503231234"
              skapadDatum: "2025-09-01"
              uppdateradDatum: "2025-09-01"
      responses:
        '200':
          description: Bekräftelse på skapad person
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Person skapades!"
                  id: 42

  /hamtaAllaPersonerSortByIdAsc:
    get:
      summary: Hämta alla personer sorterade på id (stigande)
      responses:
        '200':
          description: Lista av personer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'

  /hamtaAllaPersonerSortByEfternamnAsc:
    get:
      summary: Hämta alla personer sorterade på efternamn (stigande)
      responses:
        '200':
          description: Lista av personer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'

  /uppdateraPerson:
    put:
      summary: Uppdatera en person
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
            example:
              forNamn: "Anna"
              efterNamn: "Karlsson"
              postOrt: "Stockholm"
              uppdateradDatum: "2025-09-02"
      responses:
        '200':
          description: Bekräftelse på uppdatering
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Person uppdaterades!"
                  id: 42

  /tabortPerson:
    delete:
      summary: Ta bort en person
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Bekräftelse på borttagning
          content:
            application/json:
              schema:
                type: object
                example:
                  message: "Person med id: 42 borttagen!"

  /hamtaPersonByPersonnummer:
    get:
      summary: Hämta en person via personnummer
      parameters:
        - in: query
          name: idBet
          required: true
          schema:
            type: string
      responses:
        '200':
          description: En person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'

components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: integer
          example: 42
        careOf:
          type: string
        utdelningsadress1:
          type: string
        utdelningsadress2:
          type: string
        postNr:
          type: string
        postOrt:
          type: string
        forNamn:
          type: string
        mellanNamn:
          type: string
        efterNamn:
          type: string
        aviseringsNamn:
          type: string
        code:
          type: string
        kodTilltalsNamn:
          type: string
        lan:
          type: string
        kommun:
          type: string
        forsamling:
          type: string
        folkBokforingsDatum:
          type: string
          format: date
        folkBokforingsTyp:
          type: string
        typAvIdBet:
          type: string
        idBet:
          type: string
        hanvisningsNummer:
          type: string
        sekretessMark:
          type: string
        skyddadFolkBokforing:
          type: string
        skapadDatum:
          type: string
          format: date
        uppdateradDatum:
          type: string
          format: date
        lastevent:
          type: string
