openapi: 3.0.3
info:
  title: Person API
  description: API för att hantera persondata och integrera med Skatteverket.
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /hamtaTokenAndGUIDAndPerson:
    get:
      summary: Hämta token, GUID och persondata från SKV
      parameters:
        - name: personNr
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Framgångsrikt hämtad person
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  guid:
                    type: string
                  token:
                    type: string
                  person:
                    type: object
        '500':
          description: Fel vid hämtning
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                  message:
                    type: string
                  detail:
                    type: string
  /checkEnv:
    get:
      summary: Kontrollera vilken miljö som körs
      responses:
        '200':
          description: Miljöinformation
          content:
            application/json:
              schema:
                type: object
                properties:
                  environment:
                    type: string
                  variable:
                    type: string
                  value:
                    type: string
  /hamtaPerson/{id}:
    get:
      summary: Hämta en person via id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Person hämtad
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/person'
  /hamtaAllaPersonerSortByIdAsc:
    get:
      summary: Hämta alla personer sorterade på id
      responses:
        '200':
          description: Lista över personer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/person'
  /hamtaAllaPersonerSortByEfternamnAsc:
    get:
      summary: Hämta alla personer sorterade på efternamn
      responses:
        '200':
          description: Lista över personer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/person'
  /skapaPerson:
    post:
      summary: Skapa en ny person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/person'
      responses:
        '200':
          description: Person skapad
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer
  /uppdateraPerson/{id}:
    put:
      summary: Uppdatera en befintlig person
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/person'
      responses:
        '200':
          description: Person uppdaterad
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer
  /tabortPerson/{id}:
    delete:
      summary: Ta bort en person
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Person borttagen
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /hamtaPersonByPersonnummer:
    get:
      summary: Hämta en person via personnummer
      parameters:
        - name: idBet
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Person hämtad
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/person'

components:
  schemas:
    person:
      type: object
      properties:
        id:
          type: integer
        careOf:
          type: string
        utdelningsadress1:
          type: string
        utdelningsadress2:
          type: string
        postNr:
          type: string
        postOrt:
          type: string
        forNamn:
          type: string
        mellanNamn:
          type: string
        efterNamn:
          type: string
        aviseringsNamn:
          type: string
        code:
          type: string
        kodTilltalsNamn:
          type: string
        lan:
          type: string
        kommun:
          type: string
        forsamling:
          type: string
        folkBokforingsDatum:
          type: string
        folkBokforingsTyp:
          type: string
        typAvIdBet:
          type: string
        idBet:
          type: string
        hanvisningsNummer:
          type: string
        sekretessMark:
          type: string
        skyddadFolkBokforing:
          type: string
        skapadDatum:
          type: string
        uppdateradDatum:
          type: string
        lastevent:
          type: string