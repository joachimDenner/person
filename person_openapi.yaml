openapi: 3.0.3
info:
  title: Person API
  description: API för hantering av personposter och integration med Skatteverket.
  version: "1.0.0"

servers:
  - url: http://localhost:8080/person

paths:
  /skvToken:
    get:
      summary: Steg 1 - Hämta access-token från Skatteverket
      responses:
        '200':
          description: Token hämtad
          content:
            application/json:
              schema:
                type: object
                example:
                  access_token: string
                  token_type: bearer
                  expires_in: 3600

  /getNewGUID:
    get:
      summary: Steg 2 Skapa en ny GUID
      responses:
        '200':
          description: Ny GUID
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    format: uuid

  /hamtaPersonFranSKV:
    get:
      summary: Steg 3 - Hämta persondata från Skatteverket mha hämtad token i steg 1, och skapad GUID i steg 2
      parameters:
        - in: query
          name: personNr
          required: true
          schema:
            type: string
        - in: query
          name: skvAccessToken
          required: true
          schema:
            type: string
        - in: query
          name: skvCorrelationId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Persondata
          content:
            application/json:
              schema:
                type: object

  /checkEnv:
    get:
      summary: Kontrollera vilken miljö tjänsten kör i
      responses:
        '200':
          description: Miljöinfo
          content:
            application/json:
              schema:
                type: object
                properties:
                  environment:
                    type: string
                  variable:
                    type: string
                  value:
                    type: string

  /hamtaPerson:
    get:
      summary: Hämta en person via ID
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Person hittad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'

  /skapaPerson:
    post:
      summary: Skapa en ny person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: Person skapad
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer

  /hamtaAllaPersonerSortByIdAsc:
    get:
      summary: Hämta alla personer sorterat på ID
      responses:
        '200':
          description: Lista med personer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'

  /hamtaAllaPersonerSortByEfternamnAsc:
    get:
      summary: Hämta alla personer sorterat på efternamn
      responses:
        '200':
          description: Lista med personer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'

  /uppdateraPerson:
    put:
      summary: Uppdatera en person via ID
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: Person uppdaterad
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  id:
                    type: integer

  /tabortPerson:
    delete:
      summary: Ta bort en person via ID
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Resultat av borttagning
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /hamtaPersonByPersonnummer:
    get:
      summary: Hämta en person via personnummer (idBet)
      parameters:
        - in: query
          name: idBet
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Person hittad
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'

components:
  schemas:
    Person:
      type: object
      properties:
        id:
          type: integer
        careOf:
          type: string
        utdelningsadress1:
          type: string
        utdelningsadress2:
          type: string
        postNr:
          type: string
        postOrt:
          type: string
        forNamn:
          type: string
        mellanNamn:
          type: string
        efterNamn:
          type: string
        aviseringsNamn:
          type: string
        code:
          type: string
        kodTilltalsNamn:
          type: string
        lan:
          type: string
        kommun:
          type: string
        forsamling:
          type: string
        folkBokforingsDatum:
          type: string
        folkBokforingsTyp:
          type: string
        typAvIdBet:
          type: string
        idBet:
          type: string
        hanvisningsNummer:
          type: string
        sekretessMark:
          type: string
        skyddadFolkBokforing:
          type: string
        skapadDatum:
          type: string
        uppdateradDatum:
          type: string
        lastevent:
          type: string
