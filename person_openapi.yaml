openapi: 3.0.1
info:
  title: Person
  version: 0.1.0
servers:
- url: "{server}:{port}/person"
  variables:
    server:
      default: http://localhost
    port:
      default: "8080"
paths:
  /hamtaPerson:
    get:
      operationId: hamtaPerson
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /skapaPerson:
    post:
      operationId: skapaPerson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/person'
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /hamtaAllaPersonerSortByIdAsc:
    get:
      operationId: hamtaAllaPersonerSortByIdAsc
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
  /hamtaAllaPersonerSortByEfternamnAsc:
    get:
      operationId: hamtaAllaPersonerSortByEfternamnAsc
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
  /uppdateraPerson:
    put:
      operationId: uppdateraPerson
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/anstalld'
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
        "500":
          description: InternalServerError
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
  /tabortPerson:
    delete:
      operationId: tabortPerson
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: object
        "400":
          description: BadRequest
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
components:
  schemas:
    ErrorPayload:
      required:
      - message
      - method
      - path
      - reason
      - status
      - timestamp
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
          format: int64
        reason:
          type: string
        message:
          type: string
        path:
          type: string
        method:
          type: string
    anstalld:
      required:
      - forNamn
      - mellanNamn
      - efterNamn
      - aviseringsNamn
      - code
      - kodTilltalsNamn
      - lan
      - kommun
      - forsamling
      - folkBokforingsDatum
      - folkBokforingsTyp
      - typAvIdBet
      - idBet
      - hanvisningsNummer
      - sekretessMark
      - skyddadFolkBokforing
      - skapadDatum
      - uppdateradDatum
      type: object
      properties:
        id:
          type: integer
          format: int64
        forNamn:
          type: string
        mellanNamn:
          type: string
        efterNamn:
          type: string
        aviseringsNamn:
          type: string
        code:
          type: string
        kodTilltalsNamn:
          type: string
        lan:
          type: string
        kommun:
          type: string
        forsamling:
          type: string
        folkBokforingsDatum:
          type: string
        folkBokforingsTyp:
          type: string
        typAvIdBet:
          type: string
        idBet:
          type: string
        hanvisningsNummer:
          type: string
        sekretessMark:
          type: string
        skyddadFolkBokforing:
          type: string
        skapadDatum:
          type: string
        uppdateradDatum:
          type: string
      additionalProperties: false
